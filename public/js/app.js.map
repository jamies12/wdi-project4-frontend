{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/models/content.js","js/controllers/contents.js","js/directives/dragDrop.js","js/controllers/main.js","js/router.js","js/models/space.js","js/controllers/spaces.js","js/models/user.js","js/controllers/users.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","Content","$resource","id","update","method","ContentsNewController","createContent","save","contentsNew","newContent","content","space","space_id","params","content_type","create","dragDrop","reader","FileReader","restrict","replace","templateUrl","scope","base64","src","link","$scope","element","active","$watchGroup","image","console","log","onload","result","$apply","on","e","preventDefault","file","target","files","dataTransfer","readAsDataURL","MainController","$rootScope","logout","secureState","toState","main","menuVisible","message","isAuthenticated","protectedStates","includes","name","toggleMenu","isLoggedIn","$on","Router","$stateProvider","$urlRouterProvider","state","url","controller","otherwise","Space","SpacesIndexController","User","spacesIndex","all","query","get","getPayload","SpacesShowController","remove","reload","spacesShow","deleteContent","UsersIndexController","usersIndex","angular","module","constant","config","$inject","factory","directive"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('spaces', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('spaces')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('spacesIndex');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('spaces')\n  .factory('Content', Content);\n\nContent.$inject = ['$resource', 'API_URL'];\nfunction Content($resource, API_URL) {\n  return new $resource(`${API_URL}/contents/:id`, {id: '@id' }, {\n    update: { method: 'PUT'}\n  });\n}\n","angular.module('spaces')\n  .controller('ContentsNewController', ContentsNewController);\n\nContentsNewController.$inject = ['Content', '$state', 'Space'];\nfunction ContentsNewController(Content, $state) {\n  const contentsNew = this;\n\n  contentsNew.newContent = { space_id: $state.params.id, content_type: 'text' };\n\n  function createContent() {\n    // contentsNew.space.Content.push(contentsNew.newContent);\n    Content.save(contentsNew.newContent, (content) => {\n      $state.go('spacesShow', { id: content.space.id });\n    });\n  }\n\n  contentsNew.create = createContent;\n}\n","angular.module('spaces')\n  .directive('dragDrop', dragDrop);\nfunction dragDrop() {\n  const reader = new FileReader();\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: '/templates/dragDrop.html',\n    scope: {\n      base64: '=',\n      src: '='\n    },\n    link($scope, element) {\n      $scope.base64 = null;\n      $scope.active = false;\n      $scope.$watchGroup(['base64', 'src'], () => {\n        $scope.image = $scope.base64 || $scope.src;\n        console.log($scope);\n      });\n      reader.onload = () => {\n        $scope.base64 = reader.result;\n        $scope.$apply();\n      };\n      element\n        .on('dragenter', () => {\n          $scope.active = true;\n          $scope.$apply();\n        })\n        .on('dragover', (e) => {\n          e.preventDefault();\n        })\n        .on('dragleave', () => {\n          $scope.active = false;\n          $scope.$apply();\n        })\n      .on('drop', (e) => {\n        e.preventDefault();\n        const file = (e.target.files || e.dataTransfer.files)[0];\n        reader.readAsDataURL(file);\n      });\n    }\n  };\n}\n","angular.module('spaces')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n  main.menuVisible = false;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('moodIndex');\n    });\n  }\n\n  const protectedStates = ['space', 'usersIndex'];\n  function secureState(e, toState) {\n    main.menuVisible = false;\n    main.message = null;\n\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      main.message = 'You must be logged in to go there!';\n      $state.go('login');\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n\n  function toggleMenu() {\n    main.menuVisible = !main.menuVisible;\n  }\n\n  main.toggleMenu = toggleMenu;\n}\n","angular.module('spaces')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    // .state('usersIndex', {\n    //   url: '/users',\n    //   templateUrl: '/templates/usersIndex.html',\n    //   controller: 'UsersIndexController as usersIndex'\n    // })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('spacesIndex', {\n      url: '/spaces',\n      templateUrl: '/templates/spacesIndex.html',\n      controller: 'SpacesIndexController as spacesIndex'\n    })\n    .state('spacesShow', {\n      url: '/spaces/:id',\n      templateUrl: '/templates/spacesShow.html',\n      controller: 'SpacesShowController as spacesShow'\n    })\n    .state('contentsNew', {\n      url: '/spaces/:id/contents/new',\n      templateUrl: '/templates/contentsCreate.html',\n      controller: 'ContentsNewController as contentsNew'\n    });\n\n  $urlRouterProvider.otherwise('/spaces');\n}\n","angular.module('spaces')\n  .factory('Space', Space);\n\nSpace.$inject = ['$resource', 'API_URL'];\nfunction Space($resource, API_URL) {\n  return new $resource(`${API_URL}/spaces/:id`, {id: '@id' }, {\n    update: { method: 'PUT'}\n  });\n}\n","angular.module('spaces')\n  .controller('SpacesIndexController', SpacesIndexController)\n  .controller('SpacesShowController', SpacesShowController);\n\nSpacesIndexController.$inject = ['Space', 'User', '$auth'];\nfunction SpacesIndexController(Space, User, $auth) {\n  const spacesIndex = this;\n\n  spacesIndex.all = Space.query();\n\n  spacesIndex.user = User.get({ id: $auth.getPayload().id });\n}\n\nSpacesShowController.$inject = ['Space', '$state', '$auth', 'User', 'Content'];\nfunction SpacesShowController(Space, $state, $auth, User, Content) {\n  const spacesShow = this;\n\n  spacesShow.user = User.get({ id: $auth.getPayload().id });\n  spacesShow.space = Space.get({ id: $state.params.id });\n\n  spacesShow.isLoggedIn = $auth.isAuthenticated;\n\n  function remove(content) {\n    Content.remove({ id: content.id }, () => {\n      $state.reload();\n    });\n  }\n\n\n\n  spacesShow.deleteContent = remove;\n}\n\n// function isCurrentUser() {\n//   return $auth.getPayload().id === Number($state.params.id);\n// }\n\n// Room.query(data => {\n//     userAppEdit.rooms = [];\n//     data.forEach(item => {\n//       if (item.user_id === parseInt($auth.getPayload().id)){\n//         userAppEdit.rooms.push(item);\n//       }\n//     });\n//   });\n","angular.module('spaces')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('spaces')\n  .controller('UsersIndexController', UsersIndexController);\n\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n}\n"],"sourceRoot":"/source/"}