{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/main.js","js/router.js","js/controllers/spaces.js","js/models/user.js","js/controllers/users.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","MainController","$rootScope","logout","secureState","e","toState","main","menuVisible","message","console","log","isAuthenticated","protectedStates","includes","name","preventDefault","toggleMenu","isLoggedIn","$on","Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","SpaceController","User","$resource","id","update","method","UsersIndexController","usersIndex","all","query","angular","module","constant","config","$inject","factory"],"mappings":"YAKA,SAASA,MAAKC,EAAeC,GAC3BD,EAAcE,SAAcD,EAA5B,SACAD,EAAcG,UAAeF,EAA7B,YAEAD,EAAcI,YAAc,GCJ9B,QAASC,oBAAmBC,EAAOC,GAKjC,QAASC,KACPF,EAAMG,OAAOC,EAASC,MACnBC,KAAK,WACJL,EAAOM,GAAG,WAPhB,GAAMH,GAAWI,IAEjBJ,GAASC,QASTD,EAASF,OAASA,EAIpB,QAASO,iBAAgBT,EAAOC,GAK9B,QAASC,KACPF,EAAMU,MAAMA,EAAMC,aACfL,KAAK,WACJL,EAAOM,GAAG,WAPhB,GAAMG,GAAQF,IAEdE,GAAMC,eASND,EAAMR,OAASA,EC7BjB,QAASU,gBAAeZ,EAAOC,EAAQY,GAKrC,QAASC,KACPd,EAAMc,SACLR,KAAK,WACJL,EAAOM,GAAG,eAId,QAASQ,GAAYC,EAAGC,GACtBC,EAAKC,aAAc,EACnBD,EAAKE,QAAU,KACfC,QAAQC,IAAIL,EAASD,IACjBhB,EAAMuB,mBAAqBC,EAAgBC,SAASR,EAAQS,QAC9DV,EAAEW,iBACFT,EAAKE,QAAU,qCACfnB,EAAOM,GAAG,UAMd,QAASqB,KACPV,EAAKC,aAAcD,EAAKC,YAzB1B,GAAMD,GAAOV,IACbU,GAAKW,WAAa7B,EAAMuB,gBACxBL,EAAKE,QAAU,KACfF,EAAKC,aAAc,CAOnB,IAAMK,IAAmB,QAAS,aAWlCX,GAAWiB,IAAI,oBAAqBf,GACpCG,EAAKJ,OAASA,EAKdI,EAAKU,WAAaA,EC5BpB,QAASG,QAAOC,EAAgBC,GAC9BD,EACGE,MAAM,cACLC,IAAK,SACLC,YAAa,6BACbC,WAAY,uCAEbH,MAAM,YACLC,IAAK,YACLC,YAAa,2BACbC,WAAY,mCAEbH,MAAM,SACLC,IAAK,SACLC,YAAa,wBACbC,WAAY,6BAEbH,MAAM,SACLC,IAAK,SACLC,YAAa,wBACbC,WAAY,6BAGhBJ,EAAmBK,UAAU,UCxB/B,QAASC,oBCCT,QAASC,MAAKC,EAAW9C,GACvB,MAAO,IAAI8C,GAAa9C,EAAjB,cAAwC+C,GAAI,QACjDC,QAAUC,OAAQ,SCFtB,QAASC,sBAAqBL,GAC5B,GAAMM,GAAatC,IAEnBsC,GAAWC,IAAMP,EAAKQ,QNPxBC,QAAQC,OAAO,UAAW,aAAc,YAAa,eAClDC,SAAS,UAAW,6BACpBC,OAAO3D,MAEVA,KAAK4D,SAAW,gBAAiB,WCJjCJ,QAAQC,OAAO,UACZb,WAAW,qBAAsBtC,oBACjCsC,WAAW,kBAAmB5B,iBAEjCV,mBAAmBsD,SAAW,QAAS,UAgBvC5C,gBAAgB4C,SAAW,QAAS,UCpBpCJ,QAAQC,OAAO,UACZb,WAAW,iBAAkBzB,gBAEhCA,eAAeyC,SAAW,QAAS,SAAU,cCH7CJ,QAAQC,OAAO,UACZE,OAAOrB,QAEVA,OAAOsB,SAAW,iBAAkB,sBCHpCJ,QAAQC,OAAO,UACZb,WAAW,kBAAmBE,iBCDjCU,QAAQC,OAAO,UACZI,QAAQ,OAAQd,MAEnBA,KAAKa,SAAW,YAAa,WCH7BJ,QAAQC,OAAO,UACZb,WAAW,uBAAwBQ,sBAEtCA,qBAAqBQ,SAAW","file":"app.js","sourcesContent":["angular.module('spaces', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('spaces')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('space');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('spaces')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n  main.menuVisible = false;\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('moodIndex');\n    });\n  }\n  const protectedStates = ['space', 'usersIndex'];\n  function secureState(e, toState) {\n    main.menuVisible = false;\n    main.message = null;\n    console.log(toState, e);\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      main.message = 'You must be logged in to go there!';\n      $state.go('login');\n    }\n  }\n  $rootScope.$on('$stateChangeStart', secureState);\n  main.logout = logout;\n\n  function toggleMenu() {\n    main.menuVisible = main.menuVisible ? false : true;\n  }\n  main.toggleMenu = toggleMenu;\n}\n","angular.module('spaces')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('space', {\n      url: '/space',\n      templateUrl: '/templates/space.html',\n      controller: 'SpaceController as space'\n    });\n\n  $urlRouterProvider.otherwise('/users');\n}\n","angular.module('spaces')\n  .controller('SpaceController', SpaceController);\n\nfunction SpaceController() {\n    \n}\n","angular.module('spaces')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('spaces')\n  .controller('UsersIndexController', UsersIndexController);\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n}\n"],"sourceRoot":"/source/"}